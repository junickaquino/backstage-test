import { createPageExtension, createExtensionInput, coreExtensionData, createNavItemExtension, createPlugin } from '@backstage/frontend-plugin-api';
import { convertLegacyRouteRef, compatWrapper, convertLegacyRouteRefs } from '@backstage/core-compat-api';
import SettingsIcon from '@material-ui/icons/Settings';
import { settingsRouteRef } from './plugin.esm.js';
import React from 'react';
export { userSettingsTranslationRef } from './translation.esm.js';

const userSettingsPage = createPageExtension({
  defaultPath: "/settings",
  routeRef: convertLegacyRouteRef(settingsRouteRef),
  inputs: {
    providerSettings: createExtensionInput(
      {
        element: coreExtensionData.reactElement
      },
      { singleton: true, optional: true }
    )
  },
  loader: ({ inputs }) => import('./components/SettingsPage/index.esm.js').then(
    (m) => compatWrapper(
      /* @__PURE__ */ React.createElement(
        m.SettingsPage,
        {
          providerSettings: inputs.providerSettings?.output.element
        }
      )
    )
  )
});
const settingsNavItem = createNavItemExtension({
  routeRef: convertLegacyRouteRef(settingsRouteRef),
  title: "Settings",
  icon: SettingsIcon
});
var alpha = createPlugin({
  id: "user-settings",
  extensions: [userSettingsPage, settingsNavItem],
  routes: convertLegacyRouteRefs({
    root: settingsRouteRef
  })
});

export { alpha as default, settingsNavItem };
//# sourceMappingURL=alpha.esm.js.map
