import { useApi, identityApiRef, alertApiRef } from '@backstage/core-plugin-api';
import { useEffect } from 'react';
import useAsync from 'react-use/esm/useAsync';

const useUserProfile = () => {
  const identityApi = useApi(identityApiRef);
  const alertApi = useApi(alertApiRef);
  const { value, loading, error } = useAsync(async () => {
    return {
      profile: await identityApi.getProfileInfo(),
      identity: await identityApi.getBackstageIdentity()
    };
  }, []);
  useEffect(() => {
    if (error) {
      alertApi.post({
        message: `Failed to load user identity: ${error}`,
        severity: "error"
      });
    }
  }, [error, alertApi]);
  if (loading || error) {
    return {
      profile: {},
      displayName: "",
      loading
    };
  }
  return {
    profile: value.profile,
    backstageIdentity: value.identity,
    displayName: value.profile.displayName ?? value.identity.userEntityRef,
    loading
  };
};

export { useUserProfile };
//# sourceMappingURL=useUserProfileInfo.esm.js.map
