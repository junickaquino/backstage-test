import { createSchemaFromZod } from '../schema/createSchemaFromZod.esm.js';
import { createExtensionDataRef } from '../wiring/createExtensionDataRef.esm.js';
import { createExtension } from '../wiring/createExtension.esm.js';

function createNavItemExtension(options) {
  const { routeRef, title, icon, namespace, name } = options;
  return createExtension({
    namespace,
    name,
    kind: "nav-item",
    attachTo: { id: "app/nav", input: "items" },
    configSchema: createSchemaFromZod(
      (z) => z.object({
        title: z.string().default(title)
      })
    ),
    output: {
      navTarget: createNavItemExtension.targetDataRef
    },
    factory: ({ config }) => ({
      navTarget: {
        title: config.title,
        icon,
        routeRef
      }
    })
  });
}
((createNavItemExtension2) => {
  createNavItemExtension2.targetDataRef = createExtensionDataRef("core.nav-item.target");
})(createNavItemExtension || (createNavItemExtension = {}));

export { createNavItemExtension };
//# sourceMappingURL=createNavItemExtension.esm.js.map
