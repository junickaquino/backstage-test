import React, { lazy } from 'react';
import { ExtensionBoundary } from '../components/ExtensionBoundary.esm.js';
import { createExtensionDataRef } from '../wiring/createExtensionDataRef.esm.js';
import { createExtension } from '../wiring/createExtension.esm.js';

function createSignInPageExtension(options) {
  return createExtension({
    kind: "sign-in-page",
    namespace: options?.namespace,
    name: options?.name,
    attachTo: options.attachTo ?? { id: "app/root", input: "signInPage" },
    configSchema: options.configSchema,
    inputs: options.inputs,
    disabled: options.disabled,
    output: {
      component: createSignInPageExtension.componentDataRef
    },
    factory({ config, inputs, node }) {
      const ExtensionComponent = lazy(
        () => options.loader({ config, inputs }).then((component) => ({ default: component }))
      );
      return {
        component: (props) => /* @__PURE__ */ React.createElement(ExtensionBoundary, { node, routable: true }, /* @__PURE__ */ React.createElement(ExtensionComponent, { ...props }))
      };
    }
  });
}
((createSignInPageExtension2) => {
  createSignInPageExtension2.componentDataRef = createExtensionDataRef("core.sign-in-page.component");
})(createSignInPageExtension || (createSignInPageExtension = {}));

export { createSignInPageExtension };
//# sourceMappingURL=createSignInPageExtension.esm.js.map
