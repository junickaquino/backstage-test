{"version":3,"file":"createPlugin.esm.js","sources":["../../src/wiring/createPlugin.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionDefinition } from './createExtension';\nimport {\n  Extension,\n  resolveExtensionDefinition,\n} from './resolveExtensionDefinition';\nimport {\n  AnyExternalRoutes,\n  AnyRoutes,\n  BackstagePlugin,\n  FeatureFlagConfig,\n} from './types';\n\n/** @public */\nexport interface PluginOptions<\n  Routes extends AnyRoutes,\n  ExternalRoutes extends AnyExternalRoutes,\n> {\n  id: string;\n  routes?: Routes;\n  externalRoutes?: ExternalRoutes;\n  extensions?: ExtensionDefinition<unknown>[];\n  featureFlags?: FeatureFlagConfig[];\n}\n\n/** @public */\nexport interface InternalBackstagePlugin<\n  Routes extends AnyRoutes = AnyRoutes,\n  ExternalRoutes extends AnyExternalRoutes = AnyExternalRoutes,\n> extends BackstagePlugin<Routes, ExternalRoutes> {\n  readonly version: 'v1';\n  readonly extensions: Extension<unknown>[];\n  readonly featureFlags: FeatureFlagConfig[];\n}\n\n/** @public */\nexport function createPlugin<\n  Routes extends AnyRoutes = {},\n  ExternalRoutes extends AnyExternalRoutes = {},\n>(\n  options: PluginOptions<Routes, ExternalRoutes>,\n): BackstagePlugin<Routes, ExternalRoutes> {\n  const extensions = (options.extensions ?? []).map(def =>\n    resolveExtensionDefinition(def, { namespace: options.id }),\n  );\n\n  const extensionIds = extensions.map(e => e.id);\n  if (extensionIds.length !== new Set(extensionIds).size) {\n    const duplicates = Array.from(\n      new Set(\n        extensionIds.filter((id, index) => extensionIds.indexOf(id) !== index),\n      ),\n    );\n    // TODO(Rugvip): This could provide some more information about the kind + name of the extensions\n    throw new Error(\n      `Plugin '${options.id}' provided duplicate extensions: ${duplicates.join(\n        ', ',\n      )}`,\n    );\n  }\n\n  return {\n    $$type: '@backstage/BackstagePlugin',\n    version: 'v1',\n    id: options.id,\n    routes: options.routes ?? ({} as Routes),\n    externalRoutes: options.externalRoutes ?? ({} as ExternalRoutes),\n    featureFlags: options.featureFlags ?? [],\n    extensions,\n    toString() {\n      return `Plugin{id=${options.id}}`;\n    },\n  } as InternalBackstagePlugin<Routes, ExternalRoutes>;\n}\n\n/** @internal */\nexport function toInternalBackstagePlugin(\n  plugin: BackstagePlugin,\n): InternalBackstagePlugin {\n  const internal = plugin as InternalBackstagePlugin;\n  if (internal.$$type !== '@backstage/BackstagePlugin') {\n    throw new Error(`Invalid plugin instance, bad type '${internal.$$type}'`);\n  }\n  if (internal.version !== 'v1') {\n    throw new Error(\n      `Invalid plugin instance, bad version '${internal.version}'`,\n    );\n  }\n  return internal;\n}\n"],"names":[],"mappings":";;AAmDO,SAAS,aAId,OACyC,EAAA;AACzC,EAAA,MAAM,UAAc,GAAA,CAAA,OAAA,CAAQ,UAAc,IAAA,EAAI,EAAA,GAAA;AAAA,IAAI,SAChD,0BAA2B,CAAA,GAAA,EAAK,EAAE,SAAW,EAAA,OAAA,CAAQ,IAAI,CAAA;AAAA,GAC3D,CAAA;AAEA,EAAA,MAAM,YAAe,GAAA,UAAA,CAAW,GAAI,CAAA,CAAA,CAAA,KAAK,EAAE,EAAE,CAAA,CAAA;AAC7C,EAAA,IAAI,aAAa,MAAW,KAAA,IAAI,GAAI,CAAA,YAAY,EAAE,IAAM,EAAA;AACtD,IAAA,MAAM,aAAa,KAAM,CAAA,IAAA;AAAA,MACvB,IAAI,GAAA;AAAA,QACF,YAAA,CAAa,OAAO,CAAC,EAAA,EAAI,UAAU,YAAa,CAAA,OAAA,CAAQ,EAAE,CAAA,KAAM,KAAK,CAAA;AAAA,OACvE;AAAA,KACF,CAAA;AAEA,IAAA,MAAM,IAAI,KAAA;AAAA,MACR,CAAW,QAAA,EAAA,OAAA,CAAQ,EAAE,CAAA,iCAAA,EAAoC,UAAW,CAAA,IAAA;AAAA,QAClE,IAAA;AAAA,OACD,CAAA,CAAA;AAAA,KACH,CAAA;AAAA,GACF;AAEA,EAAO,OAAA;AAAA,IACL,MAAQ,EAAA,4BAAA;AAAA,IACR,OAAS,EAAA,IAAA;AAAA,IACT,IAAI,OAAQ,CAAA,EAAA;AAAA,IACZ,MAAA,EAAQ,OAAQ,CAAA,MAAA,IAAW,EAAC;AAAA,IAC5B,cAAA,EAAgB,OAAQ,CAAA,cAAA,IAAmB,EAAC;AAAA,IAC5C,YAAA,EAAc,OAAQ,CAAA,YAAA,IAAgB,EAAC;AAAA,IACvC,UAAA;AAAA,IACA,QAAW,GAAA;AACT,MAAO,OAAA,CAAA,UAAA,EAAa,QAAQ,EAAE,CAAA,CAAA,CAAA,CAAA;AAAA,KAChC;AAAA,GACF,CAAA;AACF;;;;"}