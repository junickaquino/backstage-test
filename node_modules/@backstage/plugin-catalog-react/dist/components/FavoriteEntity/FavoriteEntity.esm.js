import IconButton from '@material-ui/core/IconButton';
import Tooltip from '@material-ui/core/Tooltip';
import { withStyles } from '@material-ui/core/styles';
import StarIcon from '@material-ui/icons/Star';
import StarBorder from '@material-ui/icons/StarBorder';
import React from 'react';
import { useStarredEntity } from '../../hooks/useStarredEntity.esm.js';
import { catalogReactTranslationRef } from '../../translation.esm.js';
import { useTranslationRef } from '@backstage/core-plugin-api/alpha';

const YellowStar = withStyles({
  root: {
    color: "#f3ba37"
  }
})(StarIcon);
const FavoriteEntity = (props) => {
  const { toggleStarredEntity, isStarredEntity } = useStarredEntity(
    props.entity
  );
  const { t } = useTranslationRef(catalogReactTranslationRef);
  return /* @__PURE__ */ React.createElement(
    IconButton,
    {
      "aria-label": "favorite",
      color: "inherit",
      ...props,
      onClick: () => toggleStarredEntity()
    },
    /* @__PURE__ */ React.createElement(
      Tooltip,
      {
        title: isStarredEntity ? t("favoriteEntity.removeFromFavorites") : t("favoriteEntity.addToFavorites")
      },
      isStarredEntity ? /* @__PURE__ */ React.createElement(YellowStar, null) : /* @__PURE__ */ React.createElement(StarBorder, null)
    )
  );
};

export { FavoriteEntity };
//# sourceMappingURL=FavoriteEntity.esm.js.map
