import React from 'react';
import Card from '@material-ui/core/Card';
import CardActionArea from '@material-ui/core/CardActionArea';
import CardContent from '@material-ui/core/CardContent';
import Tooltip from '@material-ui/core/Tooltip';
import Typography from '@material-ui/core/Typography';
import InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';
import { makeStyles } from '@material-ui/core/styles';
import { WebFileSystemAccess } from '../../lib/filesystem/WebFileSystemAccess.esm.js';

const useStyles = makeStyles((theme) => ({
  introText: {
    textAlign: "center",
    marginTop: theme.spacing(2)
  },
  card: {
    position: "relative",
    maxWidth: 340,
    marginTop: theme.spacing(4),
    margin: theme.spacing(0, 2)
  },
  infoIcon: {
    position: "absolute",
    top: theme.spacing(1),
    right: theme.spacing(1)
  }
}));
function TemplateEditorIntro(props) {
  const classes = useStyles();
  const supportsLoad = WebFileSystemAccess.isSupported();
  const cardLoadLocal = /* @__PURE__ */ React.createElement(Card, { className: classes.card, elevation: 4 }, /* @__PURE__ */ React.createElement(
    CardActionArea,
    {
      disabled: !supportsLoad,
      onClick: () => props.onSelect?.("local")
    },
    /* @__PURE__ */ React.createElement(CardContent, null, /* @__PURE__ */ React.createElement(
      Typography,
      {
        variant: "h4",
        component: "h3",
        gutterBottom: true,
        color: supportsLoad ? void 0 : "textSecondary",
        style: { display: "flex", flexFlow: "row nowrap" }
      },
      "Load Template Directory"
    ), /* @__PURE__ */ React.createElement(
      Typography,
      {
        variant: "body1",
        color: supportsLoad ? void 0 : "textSecondary"
      },
      "Load a local template directory, allowing you to both edit and try executing your own template."
    ))
  ), !supportsLoad && /* @__PURE__ */ React.createElement("div", { className: classes.infoIcon }, /* @__PURE__ */ React.createElement(
    Tooltip,
    {
      placement: "top",
      title: "Only supported in some Chromium-based browsers"
    },
    /* @__PURE__ */ React.createElement(InfoOutlinedIcon, null)
  )));
  const cardFormEditor = /* @__PURE__ */ React.createElement(Card, { className: classes.card, elevation: 4 }, /* @__PURE__ */ React.createElement(CardActionArea, { onClick: () => props.onSelect?.("form") }, /* @__PURE__ */ React.createElement(CardContent, null, /* @__PURE__ */ React.createElement(Typography, { variant: "h4", component: "h3", gutterBottom: true }, "Edit Template Form"), /* @__PURE__ */ React.createElement(Typography, { variant: "body1" }, "Preview and edit a template form, either using a sample template or by loading a template from the catalog."))));
  const cardFieldExplorer = /* @__PURE__ */ React.createElement(Card, { className: classes.card, elevation: 4 }, /* @__PURE__ */ React.createElement(CardActionArea, { onClick: () => props.onSelect?.("field-explorer") }, /* @__PURE__ */ React.createElement(CardContent, null, /* @__PURE__ */ React.createElement(Typography, { variant: "h4", component: "h3", gutterBottom: true }, "Custom Field Explorer"), /* @__PURE__ */ React.createElement(Typography, { variant: "body1" }, "View and play around with available installed custom field extensions."))));
  return /* @__PURE__ */ React.createElement("div", { style: props.style }, /* @__PURE__ */ React.createElement(Typography, { variant: "h4", component: "h2", className: classes.introText }, "Get started by choosing one of the options below"), /* @__PURE__ */ React.createElement(
    "div",
    {
      style: {
        display: "flex",
        flexFlow: "row wrap",
        alignItems: "flex-start",
        justifyContent: "center",
        alignContent: "flex-start"
      }
    },
    supportsLoad && cardLoadLocal,
    cardFormEditor,
    !supportsLoad && cardLoadLocal,
    cardFieldExplorer
  ));
}

export { TemplateEditorIntro };
//# sourceMappingURL=TemplateEditorIntro.esm.js.map
