import Divider from '@material-ui/core/Divider';
import IconButton from '@material-ui/core/IconButton';
import Tooltip from '@material-ui/core/Tooltip';
import { makeStyles } from '@material-ui/core/styles';
import CloseIcon from '@material-ui/icons/Close';
import RefreshIcon from '@material-ui/icons/Refresh';
import SaveIcon from '@material-ui/icons/Save';
import React from 'react';
import { useDirectoryEditor } from './DirectoryEditorContext.esm.js';
import { FileBrowser } from '../../components/FileBrowser/FileBrowser.esm.js';

const useStyles = makeStyles((theme) => ({
  button: {
    padding: theme.spacing(1)
  },
  buttons: {
    display: "flex",
    flexFlow: "row nowrap",
    alignItems: "center",
    justifyContent: "flex-start"
  },
  buttonsGap: {
    flex: "1 1 auto"
  },
  buttonsDivider: {
    marginBottom: theme.spacing(1)
  }
}));
function TemplateEditorBrowser(props) {
  const classes = useStyles();
  const directoryEditor = useDirectoryEditor();
  const changedFiles = directoryEditor.files.filter((file) => file.dirty);
  const handleClose = () => {
    if (!props.onClose) {
      return;
    }
    if (changedFiles.length > 0) {
      const accepted = window.confirm(
        "Are you sure? Unsaved changes will be lost"
      );
      if (!accepted) {
        return;
      }
    }
    props.onClose();
  };
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("div", { className: classes.buttons }, /* @__PURE__ */ React.createElement(Tooltip, { title: "Save all files" }, /* @__PURE__ */ React.createElement(
    IconButton,
    {
      className: classes.button,
      disabled: directoryEditor.files.every((file) => !file.dirty),
      onClick: () => directoryEditor.save()
    },
    /* @__PURE__ */ React.createElement(SaveIcon, null)
  )), /* @__PURE__ */ React.createElement(Tooltip, { title: "Reload directory" }, /* @__PURE__ */ React.createElement(
    IconButton,
    {
      className: classes.button,
      onClick: () => directoryEditor.reload()
    },
    /* @__PURE__ */ React.createElement(RefreshIcon, null)
  )), /* @__PURE__ */ React.createElement("div", { className: classes.buttonsGap }), /* @__PURE__ */ React.createElement(Tooltip, { title: "Close directory" }, /* @__PURE__ */ React.createElement(IconButton, { className: classes.button, onClick: handleClose }, /* @__PURE__ */ React.createElement(CloseIcon, null)))), /* @__PURE__ */ React.createElement(Divider, { className: classes.buttonsDivider }), /* @__PURE__ */ React.createElement(
    FileBrowser,
    {
      selected: directoryEditor.selectedFile?.path ?? "",
      onSelect: directoryEditor.setSelectedFile,
      filePaths: directoryEditor.files.map((file) => file.path)
    }
  ));
}

export { TemplateEditorBrowser };
//# sourceMappingURL=TemplateEditorBrowser.esm.js.map
