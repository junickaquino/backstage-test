import React from 'react';
import FormControl from '@material-ui/core/FormControl';
import FormHelperText from '@material-ui/core/FormHelperText';
import Input from '@material-ui/core/Input';
import InputLabel from '@material-ui/core/InputLabel';
import { Select } from '@backstage/core-components';

const GiteaRepoPicker = (props) => {
  const { allowedOwners = [], state, onChange, rawErrors } = props;
  const ownerItems = allowedOwners ? allowedOwners.map((i) => ({ label: i, value: i })) : [{ label: "Loading...", value: "loading" }];
  const { owner } = state;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(
    FormControl,
    {
      margin: "normal",
      required: true,
      error: rawErrors?.length > 0 && !owner
    },
    allowedOwners?.length ? /* @__PURE__ */ React.createElement(
      Select,
      {
        native: true,
        label: "Owner Available",
        onChange: (selected) => onChange({
          owner: String(Array.isArray(selected) ? selected[0] : selected)
        }),
        disabled: allowedOwners.length === 1,
        selected: owner,
        items: ownerItems
      }
    ) : /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(InputLabel, { htmlFor: "ownerInput" }, "Owner"), /* @__PURE__ */ React.createElement(
      Input,
      {
        id: "ownerInput",
        onChange: (e) => onChange({ owner: e.target.value }),
        value: owner
      }
    )),
    /* @__PURE__ */ React.createElement(FormHelperText, null, "Gitea namespace where this repository will belong to. It can be the name of organization, group, subgroup, user, or the project.")
  ));
};

export { GiteaRepoPicker };
//# sourceMappingURL=GiteaRepoPicker.esm.js.map
