import React from 'react';
import FormControl from '@material-ui/core/FormControl';
import FormHelperText from '@material-ui/core/FormHelperText';
import Input from '@material-ui/core/Input';
import InputLabel from '@material-ui/core/InputLabel';

const GerritRepoPicker = (props) => {
  const { onChange, rawErrors, state } = props;
  const { workspace, owner } = state;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(FormControl, { margin: "normal", error: rawErrors?.length > 0 && !workspace }, /* @__PURE__ */ React.createElement(InputLabel, { htmlFor: "ownerInput" }, "Owner"), /* @__PURE__ */ React.createElement(
    Input,
    {
      id: "ownerInput",
      onChange: (e) => onChange({ owner: e.target.value }),
      value: owner
    }
  ), /* @__PURE__ */ React.createElement(FormHelperText, null, "The owner of the project (optional)")), /* @__PURE__ */ React.createElement(
    FormControl,
    {
      margin: "normal",
      required: true,
      error: rawErrors?.length > 0 && !workspace
    },
    /* @__PURE__ */ React.createElement(InputLabel, { htmlFor: "parentInput" }, "Parent"),
    /* @__PURE__ */ React.createElement(
      Input,
      {
        id: "parentInput",
        onChange: (e) => onChange({ workspace: e.target.value }),
        value: workspace
      }
    ),
    /* @__PURE__ */ React.createElement(FormHelperText, null, "The project parent that the repo will belong to")
  ));
};

export { GerritRepoPicker };
//# sourceMappingURL=GerritRepoPicker.esm.js.map
