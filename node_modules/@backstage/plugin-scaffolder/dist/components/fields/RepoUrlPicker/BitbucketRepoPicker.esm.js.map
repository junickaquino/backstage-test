{"version":3,"file":"BitbucketRepoPicker.esm.js","sources":["../../../../src/components/fields/RepoUrlPicker/BitbucketRepoPicker.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { Select, SelectItem } from '@backstage/core-components';\nimport { RepoUrlPickerState } from './types';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport useDebounce from 'react-use/esm/useDebounce';\nimport { useApi } from '@backstage/core-plugin-api';\nimport { scaffolderApiRef } from '@backstage/plugin-scaffolder-react';\n\n/**\n * The underlying component that is rendered in the form for the `BitbucketRepoPicker`\n * field extension.\n *\n * @public\n * @param allowedOwners - Allowed workspaces for the Bitbucket cloud repository\n * @param allowedProjects - Allowed projects for the Bitbucket cloud repository\n *\n */\nexport const BitbucketRepoPicker = (props: {\n  allowedOwners?: string[];\n  allowedProjects?: string[];\n  onChange: (state: RepoUrlPickerState) => void;\n  state: RepoUrlPickerState;\n  rawErrors: string[];\n  accessToken?: string;\n}) => {\n  const {\n    allowedOwners = [],\n    allowedProjects = [],\n    onChange,\n    rawErrors,\n    state,\n    accessToken,\n  } = props;\n  const { host, workspace, project } = state;\n  const ownerItems: SelectItem[] = allowedOwners\n    ? allowedOwners?.map(i => ({ label: i, value: i }))\n    : [];\n  const projectItems: SelectItem[] = allowedProjects\n    ? allowedProjects?.map(i => ({ label: i, value: i }))\n    : [];\n\n  useEffect(() => {\n    if (host === 'bitbucket.org' && allowedOwners.length) {\n      onChange({ workspace: allowedOwners[0] });\n    }\n  }, [allowedOwners, host, onChange]);\n\n  const scaffolderApi = useApi(scaffolderApiRef);\n\n  const [availableWorkspaces, setAvailableWorkspaces] = useState<string[]>([]);\n  const [availableProjects, setAvailableProjects] = useState<string[]>([]);\n\n  // Update available workspaces when client is available\n  useDebounce(\n    () => {\n      const updateAvailableWorkspaces = async () => {\n        if (\n          host === 'bitbucket.org' &&\n          accessToken &&\n          scaffolderApi.autocomplete\n        ) {\n          const { results } = await scaffolderApi.autocomplete({\n            token: accessToken,\n            resource: 'workspaces',\n            context: {},\n            provider: 'bitbucket-cloud',\n          });\n\n          setAvailableWorkspaces(results.map(r => r.title));\n        } else {\n          setAvailableWorkspaces([]);\n        }\n      };\n\n      updateAvailableWorkspaces().catch(() => setAvailableWorkspaces([]));\n    },\n    500,\n    [host, accessToken],\n  );\n\n  // Update available projects when client is available and workspace changes\n  useDebounce(\n    () => {\n      const updateAvailableProjects = async () => {\n        if (\n          host === 'bitbucket.org' &&\n          accessToken &&\n          workspace &&\n          scaffolderApi.autocomplete\n        ) {\n          const { results } = await scaffolderApi.autocomplete({\n            token: accessToken,\n            resource: 'projects',\n            context: { workspace },\n            provider: 'bitbucket-cloud',\n          });\n\n          setAvailableProjects(results.map(r => r.title));\n        } else {\n          setAvailableProjects([]);\n        }\n      };\n\n      updateAvailableProjects().catch(() => setAvailableProjects([]));\n    },\n    500,\n    [host, accessToken, workspace],\n  );\n\n  // Update available repositories when client is available and workspace or project changes\n  useDebounce(\n    () => {\n      const updateAvailableRepositories = async () => {\n        if (\n          host === 'bitbucket.org' &&\n          accessToken &&\n          workspace &&\n          project &&\n          scaffolderApi.autocomplete\n        ) {\n          const { results } = await scaffolderApi.autocomplete({\n            token: accessToken,\n            resource: 'repositories',\n            context: { workspace, project },\n            provider: 'bitbucket-cloud',\n          });\n\n          onChange({ availableRepos: results.map(r => r.title) });\n        } else {\n          onChange({ availableRepos: [] });\n        }\n      };\n\n      updateAvailableRepositories().catch(() =>\n        onChange({ availableRepos: [] }),\n      );\n    },\n    500,\n    [host, accessToken, workspace, project],\n  );\n\n  return (\n    <>\n      {host === 'bitbucket.org' && (\n        <FormControl\n          margin=\"normal\"\n          required\n          error={rawErrors?.length > 0 && !workspace}\n        >\n          {allowedOwners?.length ? (\n            <Select\n              native\n              label=\"Allowed Workspaces\"\n              onChange={s =>\n                onChange({ workspace: String(Array.isArray(s) ? s[0] : s) })\n              }\n              disabled={allowedOwners.length === 1}\n              selected={workspace}\n              items={ownerItems}\n            />\n          ) : (\n            <Autocomplete\n              value={workspace}\n              onChange={(_, newValue) => {\n                onChange({ workspace: newValue || '' });\n              }}\n              options={availableWorkspaces}\n              renderInput={params => (\n                <TextField {...params} label=\"Workspace\" required />\n              )}\n              freeSolo\n              autoSelect\n            />\n          )}\n          <FormHelperText>\n            The Workspace that this repo will belong to\n          </FormHelperText>\n        </FormControl>\n      )}\n      <FormControl\n        margin=\"normal\"\n        required\n        error={rawErrors?.length > 0 && !project}\n      >\n        {allowedProjects?.length ? (\n          <Select\n            native\n            label=\"Allowed Projects\"\n            onChange={s =>\n              onChange({ project: String(Array.isArray(s) ? s[0] : s) })\n            }\n            disabled={allowedProjects.length === 1}\n            selected={project}\n            items={projectItems}\n          />\n        ) : (\n          <Autocomplete\n            value={project}\n            onChange={(_, newValue) => {\n              onChange({ project: newValue || '' });\n            }}\n            options={availableProjects}\n            renderInput={params => (\n              <TextField {...params} label=\"Project\" required />\n            )}\n            freeSolo\n            autoSelect\n          />\n        )}\n        <FormHelperText>\n          The Project that this repo will belong to\n        </FormHelperText>\n      </FormControl>\n    </>\n  );\n};\n"],"names":[],"mappings":"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"}