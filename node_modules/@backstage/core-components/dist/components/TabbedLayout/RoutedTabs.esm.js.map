{"version":3,"file":"RoutedTabs.esm.js","sources":["../../../src/components/TabbedLayout/RoutedTabs.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useMemo } from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  matchRoutes,\n  useNavigate,\n  useParams,\n  useRoutes,\n} from 'react-router-dom';\nimport { Content } from '../../layout/Content';\nimport { HeaderTabs } from '../../layout/HeaderTabs';\nimport { SubRoute } from './types';\n\nexport function useSelectedSubRoute(subRoutes: SubRoute[]): {\n  index: number;\n  route?: SubRoute;\n  element?: JSX.Element;\n} {\n  const params = useParams();\n\n  const routes = subRoutes.map(({ path, children }) => ({\n    caseSensitive: false,\n    path: `${path}/*`,\n    element: children,\n  }));\n\n  // TODO: remove once react-router updated\n  const sortedRoutes = routes.sort((a, b) =>\n    // remove \"/*\" symbols from path end before comparing\n    b.path.replace(/\\/\\*$/, '').localeCompare(a.path.replace(/\\/\\*$/, '')),\n  );\n\n  const element = useRoutes(sortedRoutes) ?? subRoutes[0]?.children;\n\n  // TODO(Rugvip): Once we only support v6 stable we can always prefix\n  // This avoids having a double / prefix for react-router v6 beta, which in turn breaks\n  // the tab highlighting when using relative paths for the tabs.\n  let currentRoute = params['*'] ?? '';\n  if (!currentRoute.startsWith('/')) {\n    currentRoute = `/${currentRoute}`;\n  }\n\n  const [matchedRoute] = matchRoutes(sortedRoutes, currentRoute) ?? [];\n  const foundIndex = matchedRoute\n    ? subRoutes.findIndex(t => `${t.path}/*` === matchedRoute.route.path)\n    : 0;\n\n  return {\n    index: foundIndex === -1 ? 0 : foundIndex,\n    element,\n    route: subRoutes[foundIndex] ?? subRoutes[0],\n  };\n}\n\nexport function RoutedTabs(props: { routes: SubRoute[] }) {\n  const { routes } = props;\n  const navigate = useNavigate();\n  const { index, route, element } = useSelectedSubRoute(routes);\n  const headerTabs = useMemo(\n    () =>\n      routes.map(t => ({\n        id: t.path,\n        label: t.title,\n        tabProps: t.tabProps,\n      })),\n    [routes],\n  );\n\n  const onTabChange = (tabIndex: number) => {\n    let { path } = routes[tabIndex];\n    // Remove trailing /*\n    path = path.replace(/\\/\\*$/, '');\n    // And remove leading / for relative navigation\n    path = path.replace(/^\\//, '');\n    // Note! route resolves relative to the position in the React tree,\n    // not relative to current location\n    navigate(path);\n  };\n  return (\n    <>\n      <HeaderTabs\n        tabs={headerTabs}\n        selectedIndex={index}\n        onChange={onTabChange}\n      />\n      <Content>\n        <Helmet title={route?.title} />\n        {element}\n      </Content>\n    </>\n  );\n}\n"],"names":["React"],"mappings":"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"}