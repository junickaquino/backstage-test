{"version":3,"file":"SearchBar.esm.js","sources":["../../../src/components/SearchBar/SearchBar.tsx"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnalyticsContext,\n  configApiRef,\n  useApi,\n} from '@backstage/core-plugin-api';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { TextFieldProps } from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, {\n  ChangeEvent,\n  ComponentType,\n  forwardRef,\n  ForwardRefExoticComponent,\n  KeyboardEvent,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport useDebounce from 'react-use/esm/useDebounce';\n\nimport { SearchContextProvider, useSearch } from '../../context';\n\nfunction withContext<T>(Component: ComponentType<T>) {\n  return forwardRef<HTMLDivElement, T>((props, ref) => (\n    <SearchContextProvider inheritParentContextIfAvailable>\n      <Component {...props} ref={ref} />\n    </SearchContextProvider>\n  ));\n}\n\n/**\n * Props for {@link SearchBarBase}.\n *\n * @public\n */\nexport type SearchBarBaseProps = Omit<TextFieldProps, 'onChange'> & {\n  debounceTime?: number;\n  clearButton?: boolean;\n  onClear?: () => void;\n  onSubmit?: () => void;\n  onChange: (value: string) => void;\n  endAdornment?: React.ReactNode;\n};\n\n/**\n * All search boxes exported by the search plugin are based on the <SearchBarBase />,\n * and this one is based on the <InputBase /> component from Material UI.\n * Recommended if you don't use Search Provider or Search Context.\n *\n * @public\n */\nexport const SearchBarBase: ForwardRefExoticComponent<SearchBarBaseProps> =\n  withContext(\n    forwardRef((props, ref) => {\n      const {\n        onChange,\n        onKeyDown = () => {},\n        onClear = () => {},\n        onSubmit = () => {},\n        debounceTime = 200,\n        clearButton = true,\n        fullWidth = true,\n        value: defaultValue,\n        label,\n        placeholder,\n        inputProps = {},\n        InputProps = {},\n        endAdornment,\n        ...rest\n      } = props;\n\n      const configApi = useApi(configApiRef);\n      const [value, setValue] = useState<string>('');\n      const forwardedValueRef = useRef<string>('');\n\n      useEffect(() => {\n        setValue(prevValue => {\n          // We only update the value if our current value is the same as it was\n          // for the most recent onChange call. Otherwise it means that the users\n          // has continued typing and we should not replace their input.\n          if (prevValue === forwardedValueRef.current) {\n            return String(defaultValue);\n          }\n          return prevValue;\n        });\n      }, [defaultValue, forwardedValueRef]);\n\n      useDebounce(\n        () => {\n          forwardedValueRef.current = value;\n          onChange(value);\n        },\n        debounceTime,\n        [value],\n      );\n\n      const handleChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n          setValue(e.target.value);\n        },\n        [setValue],\n      );\n\n      const handleKeyDown = useCallback(\n        (e: KeyboardEvent<HTMLDivElement>) => {\n          if (onKeyDown) onKeyDown(e);\n          if (onSubmit && e.key === 'Enter') {\n            onSubmit();\n          }\n        },\n        [onKeyDown, onSubmit],\n      );\n\n      const handleClear = useCallback(() => {\n        forwardedValueRef.current = '';\n        onChange('');\n        setValue('');\n        if (onClear) {\n          onClear();\n        }\n      }, [onChange, onClear]);\n\n      const ariaLabel: string | undefined = label ? undefined : 'Search';\n\n      const inputPlaceholder =\n        placeholder ??\n        `Search in ${configApi.getOptionalString('app.title') || 'Backstage'}`;\n\n      const startAdornment = (\n        <InputAdornment position=\"start\">\n          <IconButton aria-label=\"Query\" size=\"small\" disabled>\n            <SearchIcon />\n          </IconButton>\n        </InputAdornment>\n      );\n\n      const clearButtonEndAdornment = (\n        <InputAdornment position=\"end\">\n          <Button\n            aria-label=\"Clear\"\n            size=\"small\"\n            onClick={handleClear}\n            onKeyDown={event => {\n              if (event.key === 'Enter') {\n                // write your functionality here\n                event.stopPropagation();\n              }\n            }}\n          >\n            Clear\n          </Button>\n        </InputAdornment>\n      );\n\n      return (\n        <TextField\n          id=\"search-bar-text-field\"\n          data-testid=\"search-bar-next\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          inputRef={ref}\n          value={value}\n          label={label}\n          placeholder={inputPlaceholder}\n          InputProps={{\n            startAdornment,\n            endAdornment: clearButton ? clearButtonEndAdornment : endAdornment,\n            ...InputProps,\n          }}\n          inputProps={{\n            'aria-label': ariaLabel,\n            ...inputProps,\n          }}\n          fullWidth={fullWidth}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          {...rest}\n        />\n      );\n    }),\n  );\n\n/**\n * Props for {@link SearchBar}.\n *\n * @public\n */\nexport type SearchBarProps = Partial<SearchBarBaseProps>;\n\n/**\n * Recommended search bar when you use the Search Provider or Search Context.\n *\n * @public\n */\nexport const SearchBar: ForwardRefExoticComponent<SearchBarProps> = withContext(\n  forwardRef((props, ref) => {\n    const { value: initialValue = '', onChange, ...rest } = props;\n\n    const { term, setTerm } = useSearch();\n\n    useEffect(() => {\n      if (initialValue) {\n        setTerm(String(initialValue));\n      }\n    }, [initialValue, setTerm]);\n\n    const handleChange = useCallback(\n      (newValue: string) => {\n        if (onChange) {\n          onChange(newValue);\n        } else {\n          setTerm(newValue);\n        }\n      },\n      [onChange, setTerm],\n    );\n\n    return (\n      <AnalyticsContext\n        attributes={{ pluginId: 'search', extension: 'SearchBar' }}\n      >\n        <SearchBarBase\n          {...rest}\n          ref={ref}\n          value={term}\n          onChange={handleChange}\n        />\n      </AnalyticsContext>\n    );\n  }),\n);\n"],"names":[],"mappings":"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"}