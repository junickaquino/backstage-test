import lodash from 'lodash';
import { DEFAULT_NAMESPACE } from '../constants.esm.js';

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, key + "" , value);
  return value;
};
class DefaultNamespaceEntityPolicy {
  constructor(namespace = DEFAULT_NAMESPACE) {
    __publicField(this, "namespace");
    this.namespace = namespace;
  }
  async enforce(entity) {
    if (entity.metadata.namespace) {
      return entity;
    }
    return lodash.merge({ metadata: { namespace: this.namespace } }, entity);
  }
}

export { DefaultNamespaceEntityPolicy };
//# sourceMappingURL=DefaultNamespaceEntityPolicy.esm.js.map
